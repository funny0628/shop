<template>
  <div class="update-mask">
    <div class="update-popup">
      <!-- <image class="bigPic" src="../../../static/update/pop.png" v-if="poppic"></image> -->
      <!-- <image class="progress" src="../../../static/update/progress.png" v-else></image> -->
      <!-- <text class="download">正在下载,请稍后......</text> -->
      <!-- <template slot-scope="">
        <text class="find">{{ find[0] }}</text>
        <text class="fast">{{ fast[0] }}</text>
        <text class="updatetip" @click="fatherEvent">{{ update[0] }}</text>
      </template> -->
      <!-- <template slot-scope="">
            <text  class="find">{{find[1]}}</text>
            <text class="fast">{{fast[1]}}</text>
            <text class="update" @tap="sonEvent">{{ update[1] }}</text>
      </template> -->

      <image
        class="bigPic"
        src="../../../static/update/pop.png"
        v-if="poppic"
      ></image>
      <image
        class="progress"
        src="../../../static/update/progress.png"
        v-else
      ></image>
      <text class="download" v-if="!poppic">{{ downloadtip }}</text>
      <template slot-scope="" v-if="poppic && updateInfo.isBigVersion">
        <text class="find"> 发现新的版本</text>
        <!--  {{find[0]}} -->
        <text class="fast">有新的版本，是否立即更新？ </text>
        <!-- {{fast[0]}} -->
      </template>

      <template slot-scope="" v-if="poppic && !updateInfo.isBigVersion">
        <text class="find">发现更新内容 </text>
        <!-- {{find[1]}} -->
        <text class="fast">发现更新内容，是否立即下载 </text>
        <!-- {{fast[1]}} -->
      </template>
      <template v-if="poppic">
        <text
          class="updatetip"
          v-if="updateInfo.isBigVersion"
          @click="
            trigger();
            fatherEvent();
          "
        >
          立即更新
        </text>
        <text
          class="updatetip"
          v-else
          @click="
            trigger();
            fatherEvent();
          "
          >立即下载</text
        >
        <!-- {{ update[0] }} -->
        <!-- {{ update[1] }} -->
      </template>
    </div>
  </div>
</template>
<script>
const globalEvent = weex.requireModule("globalEvent");
export default {
  data() {
    return {
      find: ["发现新的版本", "发现更新内容"],
      fast: ["有新的版本，是否立即更新？", "发现更新内容，是否立即下载?"],
      update: ["立即更新", "立即下载"],
      poppic: true,
      downloadtip: "正在下载,请稍后......",
      updateInfo: {},
      updateData: {
        updateBigVersion: "",
        downloadSmallVersion: ""
      }
      // {
      // 	"isBigVersion": false, // 是否为大版本
      // 	"source_url": null, // 小版本资源url
      // 	"url": "http://10.99.54.104:8081/test.wgt" // 大版本资源url
      // }
    };
  },
  created() {
    globalEvent.addEventListener("plusMessage", e => {
      this.updateInfo = e.data;
      console.log(e.data, "我收到信息----------------------------------");
    });
  },
  methods: {
    trigger() {
      this.poppic = this.updateInfo.isBigVersion;
    },
    fatherEvent() {
      if (this.updateInfo.isBigVersion) {
        console.log("更新大版本");
        this.updateData.updateBigVersion = "立即更新";
        console.log(this.updateData.updateBigVersion);

        this.openUrl(this.updateInfo.url);
      } else {
        // this.updateData.downloadSmallVersion = "立即下载";
        console.log(this.updateData.downloadSmallVersion);

        this.install(this.updateInfo.source_url);
        console.log("更新小版本");
      }
    },
    // 小版本 热更 安装 1
    install(wgtUrl) {
      console.log(wgtUrl, "--------wgtUrl");
      uni.downloadFile({
        url: wgtUrl,
        success: downloadResult => {
          console.log(
            "文件下载成功！！！！",
            "---------------- download success"
          );
          if (downloadResult.statusCode === 200) {
            plus.runtime.install(
              downloadResult.tempFilePath,
              {
                force: false
              },
              function() {
                console.error("install success...");
                plus.runtime.restart();
              },
              function(e) {
                console.error("install fail...", e);
              }
            );
          }
        }
      });
    },
    // 大更新 直接引导用户去应用市场
    openUrl(url) {
      plus.runtime.openURL(url, function(res) {
        console.error(res);
        // uni.showToast({
        //   title: "更新失败！！",
        //   duration: 1000,
        //   icon: "none"
        // });
      });
    }
  },
  mounted() {
    // this.fatherEvent()
  }
};
</script>

<style>
.update-popup {
  width: 550upx;
  height: 698upx;
  text-align: center;
  position: fixed;
  z-index: 9999;
}
.bigPic {
  width: 550upx;
  height: 698upx;
  border-radius: 10px;
}
.progress {
  width: 500upx;
  height: 40upx;
  border-radius: 16upx;
  margin-top: 400upx;
  margin-left: 50%;
  transform: translateX(-40upx);
}
.download {
  font-size: 40upx;
  color: #ffffff;
  text-align: center;
  margin-top: 20upx;
}
.find {
  position: absolute;
  top: 200upx;
  left: 30upx;
  color: #ffffff;
  font-size: 40upx;
}
.fast {
  position: absolute;
  top: 450upx;
  left: 60upx;
  font-size: 32upx;
}
.updatetip {
  position: absolute;
  top: 576upx;
  left: 45upx;
  color: #ffffff;
  font-size: 36upx;
  width: 463upx;
  height: 90upx;
  /* background-color: skyblue; */
  text-align: center;
  line-height: 90upx;
  border-radius: 100upx;
}
</style>